geom_ribbon(aes(ymin=log2(conf.low), ymax=log2(conf.high), fill=group), alpha=0.3, color=NA) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black", size = 1) +
theme(
aspect.ratio = 4/5,
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()
) +
scale_color_manual(values=colors) +
scale_fill_manual(values=colors) +
labs(
x = "Model Predictability (Log-Scale)",
y = "Human Predictability",
title = "Relationship of predictability")
# ggsave('human-llm_predictability-relationship.pdf', device = "pdf")
audio_greater_text <- c(1,-1)
contrasts(df_results$modality) <- cbind(audio_greater_text)
df_results$log_model_predictability <- log(df_results$model_predictability)
df_results$log_human_predictability <- log(df_results$human_predictability)
#
df_cleaned <- remove_outliers(df_results, 'log_model_predictability')
# df_cleaned <- df_cleaned[df_cleaned$modality == 'text',]
#
model <- glmmTMB(
formula = human_predictability ~ modality * log_model_predictability + (1|word_index:task) + (1|model_name),
# ziformula = ~ modality * log_model_predictability + (1|word_index:task),
data = df_cleaned,
# family = gaussian()
family = gaussian(link='log')
)
AIC(model)
summary(model)
tab_model(model, show.df=TRUE, show.se=TRUE, show.stat=TRUE)
plot_model(model, type='pred', terms=c('log_model_predictability', 'modality'), show.data=TRUE)
plot_model(model, type='pred', terms=c('log_model_predictability', 'modality'))
audio_greater_text <- c(1,-1)
contrasts(df_results$modality) <- cbind(audio_greater_text)
df_results$log_model_predictability <- log10(df_results$model_predictability)
df_results$log_human_predictability <- log10(df_results$human_predictability)
#
df_cleaned <- remove_outliers(df_results, 'log_model_predictability')
# df_cleaned <- df_cleaned[df_cleaned$modality == 'text',]
#
model <- glmmTMB(
formula = human_predictability ~ modality * log_model_predictability + (1|word_index:task) + (1|model_name),
# ziformula = ~ modality * log_model_predictability + (1|word_index:task),
data = df_cleaned,
# family = gaussian()
family = gaussian(link='log')
)
AIC(model)
summary(model)
tab_model(model, show.df=TRUE, show.se=TRUE, show.stat=TRUE)
plot_model(model, type='pred', terms=c('log_model_predictability', 'modality'))
audio_greater_text <- c(1,-1)
contrasts(df_results$modality) <- cbind(audio_greater_text)
df_results$log_model_predictability <- log(df_results$model_predictability)
df_results$log_human_predictability <- log(df_results$human_predictability)
#
df_cleaned <- remove_outliers(df_results, 'log_model_predictability')
# df_cleaned <- df_cleaned[df_cleaned$modality == 'text',]
#
model <- glmmTMB(
formula = human_predictability ~ modality * log_model_predictability + (1|word_index:task),
# ziformula = ~ modality * log_model_predictability + (1|word_index:task),
data = df_cleaned,
# family = gaussian()
family = gaussian(link='log')
)
AIC(model)
summary(model)
tab_model(model, show.df=TRUE, show.se=TRUE, show.stat=TRUE)
plot_model(model, type='pred', terms=c('log_model_predictability', 'modality'))
audio_greater_text <- c(1,-1)
contrasts(df_results$modality) <- cbind(audio_greater_text)
df_results$log_model_predictability <- log(df_results$model_predictability)
df_results$log_human_predictability <- log(df_results$human_predictability)
#
df_cleaned <- remove_outliers(df_results, 'log_model_predictability')
# df_cleaned <- df_cleaned[df_cleaned$modality == 'text',]
#
model <- glmmTMB(
formula = human_predictability ~ modality * log_model_predictability + (1|word_index:task) + (1|model_name),
# ziformula = ~ modality * log_model_predictability + (1|word_index:task),
data = df_cleaned,
# family = gaussian()
family = beta_family()
)
AIC(model)
summary(model)
tab_model(model, show.df=TRUE, show.se=TRUE, show.stat=TRUE)
plot_model(model, type='pred', terms=c('log_model_predictability', 'modality'), show.data=TRUE)
audio_greater_text <- c(1,-1)
contrasts(df_results$modality) <- cbind(audio_greater_text)
df_results$log_model_predictability <- log(df_results$model_predictability)
df_results$log_human_predictability <- log(df_results$human_predictability)
#
df_cleaned <- remove_outliers(df_results, 'log_model_predictability')
# df_cleaned <- df_cleaned[df_cleaned$modality == 'text',]
#
model <- glmmTMB(
formula = human_predictability ~ modality * model_predictability + (1|word_index:task) + (1|model_name),
# ziformula = ~ modality * log_model_predictability + (1|word_index:task),
data = df_cleaned,
# family = gaussian()
family = beta_family()
)
AIC(model)
summary(model)
tab_model(model, show.df=TRUE, show.se=TRUE, show.stat=TRUE)
plot_model(model, type='pred', terms=c('log_model_predictability', 'modality'), show.data=TRUE)
plot_model(model, type='pred', terms=c('model_predictability', 'modality'), show.data=TRUE)
plot_model(model, type='pred', terms=c('model_predictability', 'modality'))
audio_greater_text <- c(1,-1)
contrasts(df_results$modality) <- cbind(audio_greater_text)
df_results$log_model_predictability <- log(df_results$model_predictability)
df_results$log_human_predictability <- log(df_results$human_predictability)
#
df_cleaned <- remove_outliers(df_results, 'log_model_predictability')
# df_cleaned <- df_cleaned[df_cleaned$modality == 'text',]
#
model <- glmmTMB(
formula = human_predictability ~ modality * log_model_predictability + (1|word_index:task) + (1|model_name),
# ziformula = ~ modality * log_model_predictability + (1|word_index:task),
data = df_cleaned,
# family = gaussian()
family = beta_family()
)
AIC(model)
summary(model)
tab_model(model, show.df=TRUE, show.se=TRUE, show.stat=TRUE)
plot_model(model, type='pred', terms=c('model_predictability', 'modality'))
plot_model(model, type='pred', terms=c('logmodel_predictability', 'modality'))
plot_model(model, type='pred', terms=c('log_model_predictability', 'modality'))
audio_greater_text <- c(1,-1)
contrasts(df_results$modality) <- cbind(audio_greater_text)
df_results$log_model_predictability <- log(df_results$model_predictability)
df_results$log_human_predictability <- log(df_results$human_predictability)
#
df_cleaned <- remove_outliers(df_results, 'log_model_predictability')
# df_cleaned <- df_cleaned[df_cleaned$modality == 'text',]
#
model <- glmmTMB(
formula = human_predictability ~ modality * log_model_predictability + (1|word_index:task) + (1|model_name),
# ziformula = ~ modality * log_model_predictability + (1|word_index:task),
data = df_cleaned,
# family = gaussian()
family = beta_family(link='log')
)
audio_greater_text <- c(1,-1)
contrasts(df_results$modality) <- cbind(audio_greater_text)
df_results$log_model_predictability <- log(df_results$model_predictability)
df_results$log_human_predictability <- log(df_results$human_predictability)
#
df_cleaned <- remove_outliers(df_results, 'log_model_predictability')
# df_cleaned <- df_cleaned[df_cleaned$modality == 'text',]
#
model <- glmmTMB(
formula = human_predictability ~ modality * model_predictability + (1|word_index:task) + (1|model_name),
# ziformula = ~ modality * log_model_predictability + (1|word_index:task),
data = df_cleaned,
# family = gaussian()
family = beta_family(link='log')
)
audio_greater_text <- c(1,-1)
contrasts(df_results$modality) <- cbind(audio_greater_text)
df_results$log_model_predictability <- log(df_results$model_predictability)
df_results$log_human_predictability <- log(df_results$human_predictability)
#
df_cleaned <- remove_outliers(df_results, 'log_model_predictability')
# df_cleaned <- df_cleaned[df_cleaned$modality == 'text',]
#
model <- glmmTMB(
formula = human_predictability ~ modality * log_model_predictability + (1|word_index:task) + (1|model_name),
# ziformula = ~ modality * log_model_predictability + (1|word_index:task),
data = df_cleaned,
# family = gaussian()
family = gaussian(link='log')
)
AIC(model)
summary(model)
tab_model(model, show.df=TRUE, show.se=TRUE, show.stat=TRUE)
plot_model(model, type='pred', terms=c('log_model_predictability', 'modality'), show.data=TRUE)
preds <- data.frame(get_model_data(model, type='pred', terms = c("log_model_predictability", "modality")))
head(preds)
colors <- c('#82C564', '#F7CD84')
ggplot(preds, aes(x=x, y=log(predicted), color=group)) +
geom_point(
data = df_cleaned,
aes(x=log_model_predictability, y=log(human_predictability), color=modality),
stroke=1,
alpha=0.05) +
geom_line(size=1) +
geom_ribbon(aes(ymin=log(conf.low), ymax=log(conf.high), fill=group), alpha=0.3, color=NA) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black", size = 1) +
theme(
aspect.ratio = 4/5,
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()
) +
scale_color_manual(values=colors) +
scale_fill_manual(values=colors) +
labs(
x = "Model Predictability (Log-Scale)",
y = "Human Predictability",
title = "Relationship of predictability")
# ggsave('human-llm_predictability-relationship.pdf', device = "pdf")
preds <- data.frame(get_model_data(model, type='pred', terms = c("log_model_predictability", "modality")))
head(preds)
colors <- c('#82C564', '#F7CD84')
ggplot(preds, aes(x=x, y=log(predicted), color=group)) +
geom_point(
data = df_cleaned,
aes(x=log_model_predictability, y=log(human_predictability), color=modality),
stroke=1,
alpha=0.05) +
geom_line(size=1) +
geom_ribbon(aes(ymin=log(conf.low), ymax=log(conf.high), fill=group), alpha=0.3, color=NA) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black", size = 1) +
theme(
aspect.ratio = 4/5,
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()
) +
xlim(-10, 0) +
scale_color_manual(values=colors) +
scale_fill_manual(values=colors) +
labs(
x = "Model Predictability (Log-Scale)",
y = "Human Predictability",
title = "Relationship of predictability")
# ggsave('human-llm_predictability-relationship.pdf', device = "pdf")
# Load the results file
results_fn<-glue('{results_dir}all-task_group-analyzed-behavior_window-size-25_human-model-distributions-lemmatized.csv')
df_results <- read.csv(results_fn)
# ADD A COLUMN THAT GROUPS HUMANS/MODELS
df_results <- df_results %>%
mutate(model_type = case_when(
model_name %in% c('roberta', 'electra', 'xlm-prophetnet') ~ "mlm",
TRUE ~ "clm"  # Default case
))
df_results <- df_results[df_results$human_predictability > 0.02,]
# df_results[df_results$human_predictability == 0,]$human_predictability <- 0.01
df_results[df_results$human_predictability == 1,]$human_predictability <- 0.99
# Set the variable types
factor_columns <- c('modality', 'model_name', 'model_type', 'word_index', 'task', "entropy_group", "accuracy_group", 'task')
df_results <- convert_columns_to_factors(df_results, factor_columns)
# set order of variables
df_results$modality <- factor(df_results$modality, levels = c("audio", "text"))
df_results$model_type <- factor(df_results$model_type, levels = c("clm", "mlm"))
# df_results <- df_results[df_results$model_type == 'clm',]
audio_greater_text <- c(1,-1)
contrasts(df_results$modality) <- cbind(audio_greater_text)
df_results$log_model_predictability <- log(df_results$model_predictability)
df_results$log_human_predictability <- log(df_results$human_predictability)
#
df_cleaned <- remove_outliers(df_results, 'log_model_predictability')
# df_cleaned <- df_cleaned[df_cleaned$modality == 'text',]
#
model <- glmmTMB(
formula = human_predictability ~ modality * log_model_predictability + (1|word_index:task) + (1|model_name),
# ziformula = ~ modality * log_model_predictability + (1|word_index:task),
data = df_cleaned,
# family = gaussian()
family = gaussian(link='log')
)
AIC(model)
summary(model)
tab_model(model, show.df=TRUE, show.se=TRUE, show.stat=TRUE)
plot_model(model, type='pred', terms=c('log_model_predictability', 'modality'), show.data=TRUE)
preds <- data.frame(get_model_data(model, type='pred', terms = c("log_model_predictability", "modality")))
head(preds)
colors <- c('#82C564', '#F7CD84')
ggplot(preds, aes(x=x, y=log(predicted), color=group)) +
geom_point(
data = df_cleaned,
aes(x=log_model_predictability, y=log(human_predictability), color=modality),
stroke=1,
alpha=0.05) +
geom_line(size=1) +
geom_ribbon(aes(ymin=log(conf.low), ymax=log(conf.high), fill=group), alpha=0.3, color=NA) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black", size = 1) +
theme(
aspect.ratio = 4/5,
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()
) +
scale_color_manual(values=colors) +
scale_fill_manual(values=colors) +
labs(
x = "Model Predictability (Log-Scale)",
y = "Human Predictability",
title = "Relationship of predictability")
# ggsave('human-llm_predictability-relationship.pdf', device = "pdf")
# Load the results file
results_fn<-glue('{results_dir}all-task_group-analyzed-behavior_window-size-25_human-model-distributions-lemmatized.csv')
df_results <- read.csv(results_fn)
# ADD A COLUMN THAT GROUPS HUMANS/MODELS
df_results <- df_results %>%
mutate(model_type = case_when(
model_name %in% c('roberta', 'electra', 'xlm-prophetnet') ~ "mlm",
TRUE ~ "clm"  # Default case
))
# df_results <- df_results[df_results$human_predictability > 0.02,]
df_results[df_results$human_predictability == 0,]$human_predictability <- 0.01
df_results[df_results$human_predictability == 1,]$human_predictability <- 0.99
# Load the results file
results_fn<-glue('{results_dir}all-task_group-analyzed-behavior_window-size-25_human-model-distributions-lemmatized.csv')
df_results <- read.csv(results_fn)
# ADD A COLUMN THAT GROUPS HUMANS/MODELS
df_results <- df_results %>%
mutate(model_type = case_when(
model_name %in% c('roberta', 'electra', 'xlm-prophetnet') ~ "mlm",
TRUE ~ "clm"  # Default case
))
# df_results <- df_results[df_results$human_predictability > 0.02,]
df_results[df_results$human_predictability == 0,]$human_predictability <- 0.001
df_results[df_results$human_predictability == 1,]$human_predictability <- 0.999
# Set the variable types
factor_columns <- c('modality', 'model_name', 'model_type', 'word_index', 'task', "entropy_group", "accuracy_group", 'task')
df_results <- convert_columns_to_factors(df_results, factor_columns)
# set order of variables
df_results$modality <- factor(df_results$modality, levels = c("audio", "text"))
df_results$model_type <- factor(df_results$model_type, levels = c("clm", "mlm"))
# df_results <- df_results[df_results$model_type == 'clm',]
audio_greater_text <- c(1,-1)
contrasts(df_results$modality) <- cbind(audio_greater_text)
df_results$log_model_predictability <- log(df_results$model_predictability)
df_results$log_human_predictability <- log(df_results$human_predictability)
#
df_cleaned <- remove_outliers(df_results, 'log_model_predictability')
# df_cleaned <- df_cleaned[df_cleaned$modality == 'text',]
#
model <- glmmTMB(
formula = human_predictability ~ modality * log_model_predictability + (1|word_index:task) + (1|model_name),
# ziformula = ~ modality * log_model_predictability + (1|word_index:task),
data = df_cleaned,
# family = gaussian()
family = gaussian(link='log')
)
AIC(model)
summary(model)
tab_model(model, show.df=TRUE, show.se=TRUE, show.stat=TRUE)
plot_model(model, type='pred', terms=c('log_model_predictability', 'modality'), show.data=TRUE)
preds <- data.frame(get_model_data(model, type='pred', terms = c("log_model_predictability", "modality")))
head(preds)
colors <- c('#82C564', '#F7CD84')
ggplot(preds, aes(x=x, y=log(predicted), color=group)) +
geom_point(
data = df_cleaned,
aes(x=log_model_predictability, y=log(human_predictability), color=modality),
stroke=1,
alpha=0.05) +
geom_line(size=1) +
geom_ribbon(aes(ymin=log(conf.low), ymax=log(conf.high), fill=group), alpha=0.3, color=NA) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black", size = 1) +
theme(
aspect.ratio = 4/5,
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()
) +
scale_color_manual(values=colors) +
scale_fill_manual(values=colors) +
labs(
x = "Model Predictability (Log-Scale)",
y = "Human Predictability",
title = "Relationship of predictability")
# ggsave('human-llm_predictability-relationship.pdf', device = "pdf")
# Load the results file
results_fn<-glue('{results_dir}all-task_group-analyzed-behavior_window-size-25_human-model-distributions-lemmatized.csv')
df_results <- read.csv(results_fn)
# ADD A COLUMN THAT GROUPS HUMANS/MODELS
df_results <- df_results %>%
mutate(model_type = case_when(
model_name %in% c('roberta', 'electra', 'xlm-prophetnet') ~ "mlm",
TRUE ~ "clm"  # Default case
))
# df_results <- df_results[df_results$human_predictability > 0.02,]
df_results[df_results$human_predictability == 0,]$human_predictability <- 0.02
df_results[df_results$human_predictability == 1,]$human_predictability <- 0.99
# Set the variable types
factor_columns <- c('modality', 'model_name', 'model_type', 'word_index', 'task', "entropy_group", "accuracy_group", 'task')
df_results <- convert_columns_to_factors(df_results, factor_columns)
# set order of variables
df_results$modality <- factor(df_results$modality, levels = c("audio", "text"))
df_results$model_type <- factor(df_results$model_type, levels = c("clm", "mlm"))
# df_results <- df_results[df_results$model_type == 'clm',]
audio_greater_text <- c(1,-1)
contrasts(df_results$modality) <- cbind(audio_greater_text)
df_results$log_model_predictability <- log(df_results$model_predictability)
df_results$log_human_predictability <- log(df_results$human_predictability)
#
df_cleaned <- remove_outliers(df_results, 'log_model_predictability')
# df_cleaned <- df_cleaned[df_cleaned$modality == 'text',]
#
model <- glmmTMB(
formula = human_predictability ~ modality * log_model_predictability + (1|word_index:task) + (1|model_name),
# ziformula = ~ modality * log_model_predictability + (1|word_index:task),
data = df_cleaned,
# family = gaussian()
family = gaussian(link='log')
)
AIC(model)
summary(model)
tab_model(model, show.df=TRUE, show.se=TRUE, show.stat=TRUE)
plot_model(model, type='pred', terms=c('log_model_predictability', 'modality'), show.data=TRUE)
preds <- data.frame(get_model_data(model, type='pred', terms = c("log_model_predictability", "modality")))
head(preds)
colors <- c('#82C564', '#F7CD84')
ggplot(preds, aes(x=x, y=log(predicted), color=group)) +
geom_point(
data = df_cleaned,
aes(x=log_model_predictability, y=log(human_predictability), color=modality),
stroke=1,
alpha=0.05) +
geom_line(size=1) +
geom_ribbon(aes(ymin=log(conf.low), ymax=log(conf.high), fill=group), alpha=0.3, color=NA) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black", size = 1) +
theme(
aspect.ratio = 4/5,
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()
) +
scale_color_manual(values=colors) +
scale_fill_manual(values=colors) +
labs(
x = "Model Predictability (Log-Scale)",
y = "Human Predictability",
title = "Relationship of predictability")
# ggsave('human-llm_predictability-relationship.pdf', device = "pdf")
# Load the results file
results_fn<-glue('{results_dir}all-task_group-analyzed-behavior_window-size-25_human-model-distributions-lemmatized.csv')
df_results <- read.csv(results_fn)
# ADD A COLUMN THAT GROUPS HUMANS/MODELS
df_results <- df_results %>%
mutate(model_type = case_when(
model_name %in% c('roberta', 'electra', 'xlm-prophetnet') ~ "mlm",
TRUE ~ "clm"  # Default case
))
# df_results <- df_results[df_results$human_predictability > 0.02,]
df_results[df_results$human_predictability == 0,]$human_predictability <- 0.01
df_results[df_results$human_predictability == 1,]$human_predictability <- 0.99
# Set the variable types
factor_columns <- c('modality', 'model_name', 'model_type', 'word_index', 'task', "entropy_group", "accuracy_group", 'task')
df_results <- convert_columns_to_factors(df_results, factor_columns)
# set order of variables
df_results$modality <- factor(df_results$modality, levels = c("audio", "text"))
df_results$model_type <- factor(df_results$model_type, levels = c("clm", "mlm"))
# df_results <- df_results[df_results$model_type == 'clm',]
audio_greater_text <- c(1,-1)
contrasts(df_results$modality) <- cbind(audio_greater_text)
df_results$log_model_predictability <- log(df_results$model_predictability)
df_results$log_human_predictability <- log(df_results$human_predictability)
#
df_cleaned <- remove_outliers(df_results, 'log_model_predictability')
# df_cleaned <- df_cleaned[df_cleaned$modality == 'text',]
#
model <- glmmTMB(
formula = human_predictability ~ modality * log_model_predictability + (1|word_index:task) + (1|model_name),
# ziformula = ~ modality * log_model_predictability + (1|word_index:task),
data = df_cleaned,
# family = gaussian()
family = gaussian(link='log')
)
AIC(model)
summary(model)
tab_model(model, show.df=TRUE, show.se=TRUE, show.stat=TRUE)
plot_model(model, type='pred', terms=c('log_model_predictability', 'modality'), show.data=TRUE)
preds <- data.frame(get_model_data(model, type='pred', terms = c("log_model_predictability", "modality")))
head(preds)
colors <- c('#82C564', '#F7CD84')
ggplot(preds, aes(x=x, y=log(predicted), color=group)) +
geom_point(
data = df_cleaned,
aes(x=log_model_predictability, y=log(human_predictability), color=modality),
stroke=1,
alpha=0.05) +
geom_line(size=1) +
geom_ribbon(aes(ymin=log(conf.low), ymax=log(conf.high), fill=group), alpha=0.3, color=NA) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black", size = 1) +
theme(
aspect.ratio = 4/5,
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()
) +
scale_color_manual(values=colors) +
scale_fill_manual(values=colors) +
labs(
x = "Model Predictability (Log-Scale)",
y = "Human Predictability",
title = "Relationship of predictability")
# ggsave('human-llm_predictability-relationship.pdf', device = "pdf")
